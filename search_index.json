[
["index.html", "Tutorial Preface", " Tutorial fangjinuo 2019-12-09 Preface langx-java: Java lang extensions，a supplement to , replacement of a Guava, commons-lang. easyjson: Provides an unified JSON access API, you can adapter any JSON library to Gson, Jackson, FastJson with easyjson sqlhelper: SQL Tools ( Dialect, Pagination, DDL dump, UrlParser, SqlStatementParser, WallFilter, BatchExecutor for Test) based Java. "],
["langx-java-outline.html", "Chapter 1 outline 1.1 Repository 1.2 Versions 1.3 Features 1.4 Contact", " Chapter 1 outline Java lang extensions，a supplement to , replacement of a Guava, commons-lang 1.1 Repository GitHub: https://github.com/fangjinuo/langx-java Gitee: https://gitee.com/fangjinuo/langx-java 1.2 Versions 1.3 Features Lang extensions, for examples: Bytes, Chars, Arrays, Numbers, Dates, Throwables, Filenames, Files, FileSystems … Collection extensions: Supports Stream API for Java 6+ Adapter any object to Iterable Supports NonAbsentMap, using it, the map.get(key) will not return the null Supports NonDistinctTreeSet, NonDistinctTreeMap, just sort Supports Tuple Supports WheelQueue, CopyOnWriteHashMap NamedInheritableThreadLocal IdentityMap IdentitySet WeakIdentityHashMap ConcurrentReferenceHashMap Differ API Collection Differ Map Differ Cache Local Cache LRUCache FIFOCache Accessor API Tuple Environment Accessor Properties Accessor Map Accessor StringMap Accessor Field Accessor Array Accessor HTTP Query String Accessor Reflect utilities Modifiers Reflects Types Primitives timing HashedWheelTimer Linux NTP Cron Joda-time Clock StopWatch JavaScript in Java IdGenerator AutoIncrementIdGenerator Base64IdGenerator SimpleIdGenerator UuidGenerator SnowflakeIdGenerator Proxy AOP delegate Base64 for Java 6+ text CSV Pinyin StringTemplate placeholder: {} index: {0}, {1} C style: %d, %s … bean : ${fieldName1}, ${fieldName2} map: ${key1}, ${key2} Null judge is unnecessary Environment SystemEnvironment Event API Comparators Parse Hosts File Codec ClassPath Scanner Local JNDI Security checksum Radix converter JMX management API File Filter ExecutableFilter ExistsFileFilter FilenamePrefixFilter FilenameSuffixFilter IsDirectoryFileFilter IsFileFilter IsHiddenFileFilter IsSymlinkFileFilter ReadableFileFilter ReadonlyFileFilter ValidFilenameFilter WriteableFileFilter Lifecycle API ClassParser Converter Service BloomFilter IO Resource Load API Common Configuration API Multiple Level Jar URLStreamHandler Escaper API Delimiter Channel 1.4 Contact 如果遇到问题，可以在Github, Gitee 上提出issue, 也可以在QQ群里询问。 代码提交以GitHub为主，会定期同步到Gitee。 QQ Group: 750929088 "],
["langx-java-installation.html", "Chapter 2 Installation", " Chapter 2 Installation &lt;dependency&gt; &lt;groupId&gt;com.github.fangjinuo.langx&lt;/groupId&gt; &lt;artifiedId&gt;langx-java&lt;/artifiedId&gt; &lt;version&gt;${langx.version}&lt;/version&gt; &lt;/dependency&gt; "],
["langx-java-references.html", "Chapter 3 references 3.1 basic utils", " Chapter 3 references 3.1 basic utils 3.1.1 Emptys In any java project, you can often see the following code: // scenario 1: String s = method1(args); if(s != null &amp;&amp; s.length() &gt; 0){ ... } // scenario 2: List&lt;String&gt; list = method2(args); if(list != null &amp;&amp; !list.isEmpty()){ ... } // or if(list != null &amp;&amp; list.size() &gt; 0){ ... } // scenario 3: int[] array = method3(args); if(array != null &amp;&amp; !array.length &gt; 0){ ... } // scenario 4: Map&lt;String, Integer&gt; map = method4(args); if(map != null &amp;&amp; map.size() &gt; 0){ ... } to avoid these vomiting code, supply some simple code: // scenario 1: String s = method1(args); if(Emptys.isNotEmpty(s)){ ... } // scenario 2: List&lt;String&gt; list = method2(args); if(Emptys.isNotEmpty(list)){ ... } // scenario 3: int[] array = method3(args); if(Emptys.isNotEmpty(array)){ ... } // scenario 4: Map&lt;String, Integer&gt; map = method4(args); if(Emptys.isNotEmpty(map)){ ... } wow, you can use Emptys.isNotEmpty() to judge any object is not empty. public static boolean isNotEmpty(Object o) { return !isEmpty(o); } public static boolean isEmpty(Object object) { if (object == null) { return true; } if (object instanceof String) { return Strings.isEmpty((String) object); } if (object instanceof CharSequence) { CharSequence cs = (CharSequence) object; return cs.length() == 0; } if (object instanceof Number) { return isZero((Number) object); } if (object instanceof Buffer) { Buffer buff = (Buffer) object; return buff.hasRemaining(); } if (object instanceof Collection) { return ((Collection) object).isEmpty(); } if (object instanceof Map) { return ((Map) object).isEmpty(); } if (object.getClass().isArray()) { return Arrs.getLength(object) &lt;= 0; } if (object.getClass().isEnum()) { return false; } return false; } 3.1.2 Objects in java 7 ~ 9 , supply a object utility class: java.util.Objects, many convenient methods in it: public static boolean equals(Object a, Object b); public static boolean deepEquals(Object a, Object b); public static int hashCode(Object o); public static int hash(Object... values); public static String toString(Object o); public static String toString(Object o, String nullDefault); public static &lt;T&gt; int compare(T a, T b, Comparator&lt;? super T&gt; c); public static boolean isNull(Object obj); public static boolean nonNull(Object obj); public static &lt;T&gt; T requireNonNull(T obj); public static &lt;T&gt; T requireNonNull(T obj, String message); public static &lt;T&gt; T requireNonNullElse(T obj, T defaultObj); public static &lt;T&gt; T requireNonNullElseGet(T obj, Supplier&lt;? extends T&gt; supplier); public static &lt;T&gt; T requireNonNull(T obj, Supplier&lt;String&gt; messageSupplier); public static int checkIndex(int index, int length); public static int checkFromToIndex(int fromIndex, int toIndex, int length); public static int checkFromIndexSize(int fromIndex, int size, int length); to using the utility class, I migrate it to langx-java, named com.jn.langx.util.Objects. It contain all above methods, supply the following methods: public static &lt;T&gt; T useValueIfNull(T value, T defaultValue); // it is similar to requireNonNullElse public static boolean isNotNull(Object obj); // equals: nonNull public static boolean isEmpty(Object o); // based on Emptys.isEmpty() public static boolean isNotEmpty(Object o);// based on Emptys.isNotEmpty() "],
["sqlhelper-outline.html", "Chapter 4 Outline 4.1 Versions 4.2 Features 4.3 Supports Databases", " Chapter 4 Outline SQL Tools ( Dialect, Pagination, DDL Dump, UrlParser, SqlStatementParser, WallFilter, BatchExecutor for Test) based Java 4.1 Versions 4.2 Features Pagination Supports Mybatis, Mybatis-plus, SpringJDBC, Apache Commons-DBUtils, JFinal, EBean, Mango… Supports multiple databases in one application Supports auto detect dialect, so the dialect option is optional Supports plugin use Java SPI Supports spring boot 1.x , 2.x Supports JDK 6+ Supports Memory Pagination Supports SqlSymbolMapper, use it you can mapping any symbol to SQL symbol Supports subquery pagination for mybatis, spring-jdbc, apache commons-dbutils Supports 110+ databases, contains all most Chinese databases AliSQL (阿里 MySQL) AntDB (亚信) CirroDB (东方国信 行云) CynosDB (腾讯云数据库) Doris (Apache Doris，百度研发) DM (达梦) EsgynDB (易鲸捷) GaussDB (华为 高斯) GBase (南大通用) GoldenDB (中兴) HHDB (恒辉数据库) HighGo (瀚高) HybridDB (阿里巴巴 分布式PostgreSQL) K-DB (浪潮) KingBase (金仓) MaxCompute (阿里巴巴) OBase (上海丛云信息科技) OceanBase (阿里巴巴/蚂蚁金服 兼容mysql) OSCAR (神州通用) OpenBase (东软) RadonDB (青云) SequoiaDB (巨杉) SinoDB (星瑞格) TDSQL (腾讯 分布式MySQL) TiDB (北京平凯星辰科技)) Trafodion (易鲸捷 EsgynDB的开源版) DDL Dumper URL Parser Batch Executor for Tester 4.3 Supports Databases Supports the following databases, your can find them in DBEngines: A Access ActorDB AgensGraph Altibase AliSQL (阿里巴巴, 兼容 mysql) AntDB (亚信) Aurora (Amazon Aurora) Azure (Microsoft Azure Cloud Database) B BigObject Brytlyt C Cache (CacheDB) CirroDB (东方国信 行云) Citus ClickHouse ClustrixDB Cobol Cockroach ComDB2 Covenant Crate CTree (CTreeACE, CTreeEDGE, CTreeRTG) Cubrid CynosDB (腾讯云数据库，兼容mysql, PostgreSQL) D DB2 DBF Derby DM (达梦数据库) Doris (Apache Doris, 百度研发) Drill (Apache Drill) E Elasticsearch EsgynDB F FileMaker Firebird G GaussDB (华为 高斯数据库) GBase (南大通用) GoldenDB Greenplum H H2 HANA (SAP HANAColumn, HANAStore) Hawq (Apache Hawq) HerdDB HhDB HighGo (瀚高数据库) Hive HSQL I Ignite (Apache Ignite) Impala (Apache Impala) Informix Ingres Interbase Iris J JDataStore K K-DB (浪潮数据库) KarelDB KingBase (人大金仓) Kinetica Kognitio L LeanXcale Linter M MariaDb MaxCompute (阿里巴巴 飞天) MAXDB (SAP MaxDB) Mckoi MemSQL MimerSQL Monet MSQL (MiniSQL) MySQL N Neo4j Netezza (IBM Netezza) NexusDB NuoDB O OBase OceanBase (阿里巴巴) Omnisci OpenBase (东软集团) OpenEdge Oracle (8i,9,9i,10g,11g,12c) OrientDB OSACR (神通数据库) P Paradox PerconaMySQL Phoenix (HBase JDBC Client) PostgreSQL Presto R RadonDB Raima RBase RDMSOS2200 Redshift (Amazon Redshift) S Sadas SequoiaDB (巨杉数据库) SinoDB (星瑞格) Small SnappyData SnowflakeDialect SpliceMachine SQLite SQLServer (SQLServer 2005,2008,2012,2017) SQream T Tajo TDSQL (腾讯 分布式mysql) Teradata TiDB (北京平凯星辰科技) TimesTen Trafodion Transbase V Valentina Vertica Virtuoso VistaDB VoltDB X Xtreme (EXtremeSQL, XtremeData) Y Yaacomo YugabyteDB "],
["sqlhelper-pagination.html", "Chapter 5 Pagination 5.1 Configuration 5.2 MyBatis Application 5.3 MyBatis + Spring Boot Application 5.4 MyBatis + MyBatis-plus + Spring Boot Application 5.5 Migrate from PageHelper 5.6 SpringJDBC Application", " Chapter 5 Pagination 5.1 Configuration There are two types of configurations for pagination: Instrumentator configurations: (you can find out com.jn.sqlhelper.dialect.pagination.SQLInstrumentConfig from source) dialect: the database dialect, if sqlhelper can’t find a right database dialect, you can use it dialectClassName: your custom dialect class cacheInstrumentedSql: whether cache all instrumentd sql, use it to avoid instrument a sql again, defualt is false subqueryPagingStartFlag: the start flag of a subquery sql , the default value is [PAGING_START] subqueryPagingEndFlag: the end flag of a subquery sql, the defulat value is [PAGING_END] pagination plugin common configurations: (you can find out com.jn.sqlhelper.dialect.pagination.PaginationProperties from source) count : where execute select count, the default value is true defaultPageSize: the default page size, if your pageNo &gt;0, but the pageSize is not set, will using it. the default value is 10 useLastPageIfPageNoOut: whether get the last page records when your pageNo &gt; maxPages, the defulat value is false Some plugin specified configurations will be described in themselves. 5.2 MyBatis Application 5.2.1 installation import dependencies: &lt;dependency&gt; &lt;groupId&gt;com.github.fangjinuo.sqlhelper&lt;/groupId&gt; &lt;artifactId&gt;sqlhelper-dialect&lt;/artifactId&gt; &lt;version&gt;${sqlhelper.version}&lt;/version&gt; &lt;/dependency&gt; config mybatis-config.xml: &lt;configuration&gt; ... &lt;databaseIdProvider type=&quot;DB_VENDOR&quot;&gt; &lt;property name=&quot;SQL Server&quot; value=&quot;sqlserver&quot;/&gt; &lt;property name=&quot;DB2&quot; value=&quot;db2&quot;/&gt; &lt;property name=&quot;Oracle&quot; value=&quot;oracle&quot; /&gt; &lt;/databaseIdProvider&gt; ... &lt;settings&gt; ... &lt;setting name=&quot;defaultScriptingLanguage&quot; value=&quot;com.jn.sqlhelper.mybatis.plugins.pagination.CustomScriptLanguageDriver&quot; /&gt; ... &lt;/settings&gt; ... &lt;/configuration&gt; &lt;plugins&gt; &lt;plugin interceptor=&quot;com.jn.sqlhelper.mybatis.plugins.pagination.MybatisPaginationPlugin&quot;&gt; &lt;property name =&quot;sqlhelper.mybatis.instrumentor.dialect&quot; value=&quot;mysql&quot; /&gt; &lt;property name =&quot;sqlhelper.mybatis.instrumentor.cacheInstruemtedSql&quot; value=&quot;true&quot; /&gt; &lt;property name =&quot;sqlhelper.mybatis.pagination.count&quot; value=&quot;true&quot; /&gt; &lt;property name =&quot;sqlhelper.mybatis.pagination.count&quot; value=&quot;defaultPageSize&quot; /&gt; &lt;property name =&quot;sqlhelper.mybatis.pagination.count&quot; value=&quot;useLastPageIfPageNoOut&quot; /&gt; &lt;property name =&quot;sqlhelper.mybatis.pagination.count&quot; value=&quot;_COUNT&quot; /&gt; &lt;/plugin&gt; &lt;/plugins&gt; Usage @GetMapping(&quot;/_useMyBatis&quot;) public PagingResult list_useMyBatis( @RequestParam(name = &quot;pageNo&quot;, required = false) Integer pageNo, @RequestParam(name = &quot;pageSize&quot;, required = false) Integer pageSize, @RequestParam(name = &quot;sort&quot;, required = false) String sort) { User queryCondition = new User(); queryCondition.setAge(10); PagingRequest request = SqlPaginations.preparePagination(pageNo == null ? 1 : pageNo, pageSize == null ? -1 : pageSize, sort); List&lt;User&gt; users = userDao.selectByLimit(queryCondition); String json = JSONBuilderProvider.simplest().toJson(request.getResult()); System.out.println(json); json = JSONBuilderProvider.simplest().toJson(users); System.out.println(json); return request.getResult(); } you can find more examples from UserController class in sqlhelper-exmples 5.2.2 specified configurations to performance, supply a count sql statement cache , you can configure it like: countCacheInitCapacity: the initial capacity of count sql statement cache, the default value is 10 countCacheMaxCapacity: the max capacity of count sql statement cache, the default values is 1000, if you don’t want use it , you can close it with any value &lt; 1 countCacheExpireInSeconds: the TTL of a count sql statement, the default value is 5 countSuffix : if you custom some count yourself, using it. the default value is **_COUNT** more information you will find out at com.jn.sqlhelper.mybatis.plugins.pagination.PaginationPluginConfig 5.3 MyBatis + Spring Boot Application 5.4 MyBatis + MyBatis-plus + Spring Boot Application 5.5 Migrate from PageHelper 5.6 SpringJDBC Application "]
]
