[
["index.html", "Tutorial Chapter 1 Prerequisites 1.1 # langx-java", " Tutorial fangjinuo 2019-12-07 Chapter 1 Prerequisites This is a sample book written in Markdown. You can use anything that Pandoc’s Markdown supports, e.g., a math equation \\(a^2 + b^2 = c^2\\). The bookdown package can be installed from CRAN or Github: install.packages(&quot;bookdown&quot;) # or the development version # devtools::install_github(&quot;rstudio/bookdown&quot;) Remember each Rmd file contains one and only one chapter, and a chapter is defined by the first-level heading #. To compile this example to PDF, you need XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): https://yihui.name/tinytex/. 1.1 # langx-java title: “langx-java” author: “github: fangjinuo” date: “2019/12/5” output: html_document — "],
["langx-java-1.html", "Chapter 2 langx-java 2.1 outline 2.2 Installation 2.3 references", " Chapter 2 langx-java Java lang extensions，a supplement to , replacement of a Guava, commons-lang 2.1 outline 2.1.1 Repository GitHub: https://github.com/fangjinuo/langx-java Gitee: https://gitee.com/fangjinuo/langx-java 2.1.2 Versions 2.1.3 Features Lang extensions, for examples: Bytes, Chars, Arrays, Numbers, Dates, Throwables, Filenames, Files, FileSystems … Collection extensions: Supports Stream API for Java 6+ Adapter any object to Iterable Supports NonAbsentMap, using it, the map.get(key) will not return the null Supports NonDistinctTreeSet, NonDistinctTreeMap, just sort Supports Tuple Supports WheelQueue, CopyOnWriteHashMap NamedInheritableThreadLocal IdentityMap IdentitySet WeakIdentityHashMap ConcurrentReferenceHashMap Differ API Collection Differ Map Differ Cache Local Cache LRUCache FIFOCache Accessor API Tuple Environment Accessor Properties Accessor Map Accessor StringMap Accessor Field Accessor Array Accessor HTTP Query String Accessor Reflect utilities Modifiers Reflects Types Primitives timing HashedWheelTimer Linux NTP Cron Joda-time Clock StopWatch JavaScript in Java IdGenerator AutoIncrementIdGenerator Base64IdGenerator SimpleIdGenerator UuidGenerator SnowflakeIdGenerator Proxy AOP delegate Base64 for Java 6+ text CSV Pinyin StringTemplate placeholder: {} index: {0}, {1} C style: %d, %s … bean : ${fieldName1}, ${fieldName2} map: ${key1}, ${key2} Null judge is unnecessary Environment SystemEnvironment Event API Comparators Parse Hosts File Codec ClassPath Scanner Local JNDI Security checksum Radix converter JMX management API File Filter ExecutableFilter ExistsFileFilter FilenamePrefixFilter FilenameSuffixFilter IsDirectoryFileFilter IsFileFilter IsHiddenFileFilter IsSymlinkFileFilter ReadableFileFilter ReadonlyFileFilter ValidFilenameFilter WriteableFileFilter Lifecycle API ClassParser Converter Service BloomFilter IO Resource Load API Common Configuration API Multiple Level Jar URLStreamHandler Escaper API Delimiter Channel 2.1.4 Contact: 如果遇到问题，可以在Github, Gitee 上提出issue, 也可以在QQ群里询问。 代码提交以GitHub为主，会定期同步到Gitee。 QQ Group: 750929088 2.2 Installation This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com. When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this: &lt;dependency&gt; &lt;groupId&gt;com.github.fangjinuo.langx&lt;/groupId&gt; &lt;artifiedId&gt;langx-java&lt;/artifiedId&gt; &lt;version&gt;${langx.version}&lt;/version&gt; &lt;/dependency&gt; 2.3 references This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com. "]
]
